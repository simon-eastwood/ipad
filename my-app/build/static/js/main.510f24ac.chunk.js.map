{"version":3,"sources":["customlayout/CustomLayout.tsx","header/styles.ts","header/view.tsx","header/index.tsx","toolbar/Toolbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["model","Model","fromJson","global","layout","CustomLayout","className","factory","node","getComponent","getName","HeaderTitle","styled","marginBottom","marginTop","fontWeight","paddingRight","fontFamily","HeaderLogo","$theme","marginRight","height","width","HeaderContainer","children","backgroundColor","rest","useStyletron","cssClass","css","display","justifyContent","borderBottomWidth","borderBottomStyle","borderBottomColor","alignItems","position","zIndex","data-epo","HeaderSubContainer","View","props","logo","appName","leftSide","rightSide","src","Header","toolbarStyles","Toolbar","style","marginLeft","App","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","engine","Styletron","ReactDOM","render","StrictMode","value","theme","Theme","document","getElementById"],"mappings":"4RAyCMA,EAAQC,QAAMC,SApCG,CACrBC,OAAQ,GACRC,OAAQ,CACN,KAAQ,MACR,OAAU,IACV,SAAY,CACV,CACE,KAAQ,SACR,OAAU,GACV,SAAY,EACZ,SAAY,CACV,CACE,KAAQ,MACR,KAAQ,MACR,UAAa,YAInB,CACE,KAAQ,SACR,OAAU,GAEV,SAAY,EACZ,SAAY,CACV,CACE,KAAQ,MACR,KAAQ,MAER,UAAa,gBA8BVC,MApBf,WASE,OACE,qBAAKC,UAAU,eAAf,SACE,cAAC,SAAD,CACEN,MAAOA,EACPO,QAXU,SAACC,GAEf,GAAkB,WADFA,EAAKC,eAEnB,OAAO,cAAC,SAAD,UAASD,EAAKE,kB,2CC/BdC,EAAuCC,iBAAO,KAAM,CAC7DC,aAAc,IACdC,UAAW,IACXC,WAAY,IACZC,aAAc,mCACdC,WAAY,0C,+FCbVC,EAAaN,YAAO,OAAO,YAAqB,EAAlBO,OAChC,MAAO,CACHC,YAAa,MACbC,OAAQ,OACRC,MAAO,WAITC,EAAmD,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,gBAAoBC,EAAW,iBACjG,EAAmBC,cACfC,GAAWC,EADf,qBDfO,CACHC,QAAS,OACTC,eAAgB,gBAChBC,kBAAmB,SACnBC,kBAAmB,QACnBC,kBAAmB,mCACnBb,OAAQ,wCACRc,WAAY,SACZC,SAAU,WACVX,gBCOgC,CAAEA,mBDPXA,gBACvBY,OAAQ,ICSZ,OACI,gDAAQC,WAAS,aAAahC,UAAWsB,GAAeF,GAAxD,aACKF,MAKPe,EAAqB3B,YAAO,OAAO,YAAqB,EAAlBO,OACxC,MAAO,CACHW,QAAS,OACTT,OAAQ,OACRc,WAAY,aAmBLK,EAdF,SAACC,GACV,IAAQC,EAAiED,EAAjEC,KAAMC,EAA2DF,EAA3DE,QAASC,EAAkDH,EAAlDG,SAAUC,EAAwCJ,EAAxCI,UAAWpB,EAA6BgB,EAA7BhB,gBAAoBC,EAAhE,YAAyEe,EAAzE,GACA,OACI,eAAC,EAAD,yBAAiBhB,gBAAiBA,GAAqBC,GAAvD,cACI,eAACa,EAAD,WACKG,GAAQ,cAACxB,EAAD,CAAY4B,IAAKJ,IACzBC,GAAW,cAAChC,EAAD,UAAcgC,IACzBC,KAEL,cAACL,EAAD,UAAqBM,SCtClBE,EAJA,SAACN,GACZ,OAAO,cAAC,EAAD,eAAUA,KCHfO,EAAgB,CAClB1B,MAAO,QAUI2B,EAPC,WACZ,OACI,qBAAKC,MAAOF,EAAZ,SAA2B,cAAC,EAAD,CAAQL,QAAQ,YAAYD,KAAK,yBAAyBjB,gBAAgB,QAAQmB,SAAU,qBAAKM,MAAO,CAAEpB,QAAS,OAAQqB,WAAY,QAA3C,kBAAiEN,UAAW,qBAAKK,MAAO,CAAEpB,QAAS,OAAQV,YAAa,QAA5C,wBCK5LgC,G,OATH,WACR,OACI,sBAAKC,GAAG,YAAR,UACI,cAAC,EAAD,IACA,cAAC,EAAD,SCKGC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,iBCERQ,G,cAAS,IAAIC,KAInBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,WAAD,CAAmBC,MAAOL,EAA1B,SACE,cAAC,eAAD,CAAcM,MAAOC,QAArB,SACE,cAAC,EAAD,UAINC,SAASC,eAAe,SAM1BlB,M","file":"static/js/main.510f24ac.chunk.js","sourcesContent":["import { Layout, Model, TabNode, IJsonModel } from 'flexlayout-react';\nimport './CustomLayout.css';\nimport { Button } from '@epo/epods-react-components';\nimport 'flexlayout-react/style/light.css';\n\nvar json: IJsonModel = {\n  global: {},\n  layout: {\n    \"type\": \"row\",\n    \"weight\": 100,\n    \"children\": [\n      {\n        \"type\": \"tabset\",\n        \"weight\": 50,\n        \"selected\": 0,\n        \"children\": [\n          {\n            \"type\": \"tab\",\n            \"name\": \"One\",\n            \"component\": \"button\"\n          }\n        ]\n      },\n      {\n        \"type\": \"tabset\",\n        \"weight\": 50,\n\n        \"selected\": 0,\n        \"children\": [\n          {\n            \"type\": \"tab\",\n            \"name\": \"Two\",\n\n            \"component\": \"button\"\n          }\n        ]\n      }\n    ]\n  }\n};\n\nconst model = Model.fromJson(json);\n\nfunction CustomLayout() {\n\n  const factory = (node: TabNode) => {\n    var component = node.getComponent();\n    if (component === \"button\") {\n      return <Button>{node.getName()}</Button>;\n    }\n  }\n\n  return (\n    <div className=\"customlayout\">\n      <Layout\n        model={model}\n        factory={factory}\n\n      />\n    </div>\n  );\n}\n\nexport default CustomLayout;\n","import { styled, StyletronComponent } from 'styletron-react';\r\n\r\nexport const headerRootStyles = (props: any) => {\r\n    return {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        borderBottomWidth: '0.1rem',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomColor: 'var(--epods--color-bluegrey-100)',\r\n        height: 'var(--epods--header-container-height)',\r\n        alignItems: 'center',\r\n        position: 'relative',\r\n        backgroundColor: props.backgroundColor,\r\n        zIndex: 0,\r\n    };\r\n};\r\n\r\nexport const HeaderTitle: StyletronComponent<any> = styled('h4', {\r\n    marginBottom: '0',\r\n    marginTop: '0',\r\n    fontWeight: 100,\r\n    paddingRight: 'var(--epods--header-menu-margin)',\r\n    fontFamily: 'var(--epods--font-secondary-semibold)',\r\n});\r\n\r\nexport default {};","import React, { ReactNode, FunctionComponent } from 'react';\r\n\r\nimport { IHeaderProps } from './types';\r\nimport {\r\n    useStyletron,\r\n    styled\r\n} from 'baseui';\r\nimport { headerRootStyles, HeaderTitle } from './styles';\r\n\r\nconst HeaderLogo = styled('img', ({ $theme }: any) => {\r\n    return {\r\n        marginRight: '2px',\r\n        height: '100%',\r\n        width: 'auto',\r\n    };\r\n});\r\n\r\nconst HeaderContainer: FunctionComponent<IHeaderProps> = ({ children, backgroundColor, ...rest }) => {\r\n    const [css]: any = useStyletron();\r\n    let cssClass = css(headerRootStyles({ backgroundColor }));\r\n\r\n\r\n    return (\r\n        <header data-epo=\"epo-header\" className={cssClass}  {...rest}>\r\n            {children}\r\n        </header>\r\n    );\r\n};\r\n\r\nconst HeaderSubContainer = styled('div', ({ $theme }: any) => {\r\n    return {\r\n        display: 'flex',\r\n        height: '100%',\r\n        alignItems: 'center',\r\n    };\r\n});\r\n\r\n\r\nconst View = (props: IHeaderProps) => {\r\n    const { logo, appName, leftSide, rightSide, backgroundColor, ...rest } = props;\r\n    return (\r\n        <HeaderContainer backgroundColor={backgroundColor} {...rest}>\r\n            <HeaderSubContainer>\r\n                {logo && <HeaderLogo src={logo} />}\r\n                {appName && <HeaderTitle>{appName}</HeaderTitle>}\r\n                {leftSide}\r\n            </HeaderSubContainer>\r\n            <HeaderSubContainer>{rightSide}</HeaderSubContainer>\r\n        </HeaderContainer>\r\n    );\r\n};\r\n\r\nexport default View;","import React from 'react';\r\nimport { IHeaderProps } from './types'\r\nimport View from './view';\r\n\r\n\r\nconst Header = (props: IHeaderProps) => {\r\n    return <View {...props} />;\r\n};\r\n\r\nexport default Header;","\r\nimport Header from '../header'\r\n\r\nconst toolbarStyles = {\r\n    width: \"100%\"\r\n};\r\n\r\nconst Toolbar = () => {\r\n    return (\r\n        <div style={toolbarStyles}><Header appName=\"Workbench\" logo=\"/EPO-logo.034e00d7.gif\" backgroundColor=\"white\" leftSide={<div style={{ display: 'flex', marginLeft: '6rem' }}>left</div>} rightSide={<div style={{ display: 'flex', marginRight: '6rem' }}>right</div>} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toolbar;\r\n","import CustomLayout from \"./customlayout/CustomLayout\";\r\nimport Toolbar from \"./toolbar/Toolbar\";\r\nimport { Button as EpoButton } from '@epo/epods-react-components'\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div id=\"container\">\r\n            <Toolbar></Toolbar>\r\n            <CustomLayout />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Client as Styletron } from 'styletron-engine-atomic';\nimport { Provider as StyletronProvider } from 'styletron-react';\nimport { Theme, BaseProvider } from \"@epo/epods-react-components/lib/Themes\";\n\nimport './gray.css';\nimport '@epo/css-framework-precla/lib/index.min.css'\n\nconst engine = new Styletron();\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <StyletronProvider value={engine}>\n      <BaseProvider theme={Theme}>\n        <App />\n      </BaseProvider>\n    </StyletronProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}