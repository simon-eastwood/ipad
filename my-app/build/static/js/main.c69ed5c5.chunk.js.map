{"version":3,"sources":["customlayout/CustomLayout.tsx","toolbar/Toolbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["model","Model","fromJson","global","layout","CustomLayout","className","factory","node","getComponent","getName","toolbarStyles","width","Toolbar","style","appName","logo","backgroundColor","leftSide","display","marginLeft","rightSide","marginRight","App","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","engine","Styletron","ReactDOM","render","StrictMode","value","theme","Theme","document","getElementById"],"mappings":"4RAyCMA,EAAQC,QAAMC,SApCG,CACrBC,OAAQ,GACRC,OAAQ,CACN,KAAQ,MACR,OAAU,IACV,SAAY,CACV,CACE,KAAQ,SACR,OAAU,GACV,SAAY,EACZ,SAAY,CACV,CACE,KAAQ,MACR,KAAQ,MACR,UAAa,YAInB,CACE,KAAQ,SACR,OAAU,GAEV,SAAY,EACZ,SAAY,CACV,CACE,KAAQ,MACR,KAAQ,MAER,UAAa,gBA8BVC,MApBf,WASE,OACE,qBAAKC,UAAU,eAAf,SACE,cAAC,SAAD,CACEN,MAAOA,EACPO,QAXU,SAACC,GAEf,GAAkB,WADFA,EAAKC,eAEnB,OAAO,cAAC,SAAD,UAASD,EAAKE,kBC7CrBC,EAAgB,CAClBC,MAAO,QAUIC,EAPC,WACZ,OACI,qBAAKC,MAAOH,EAAZ,SAA2B,cAAC,SAAD,CAAQI,QAAQ,YAAYC,KAAK,0BAA0BC,gBAAgB,QAAQC,SAAU,qBAAKJ,MAAO,CAAEK,QAAS,OAAQC,WAAY,QAA3C,kBAAiEC,UAAW,qBAAKP,MAAO,CAAEK,QAAS,OAAQG,YAAa,QAA5C,wBCK7LC,G,OATH,WACR,OACI,sBAAKC,GAAG,YAAR,UACI,cAAC,EAAD,IACA,cAAC,EAAD,SCKGC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,yBCERQ,G,cAAS,IAAIC,KAInBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,WAAD,CAAmBC,MAAOL,EAA1B,SACE,cAAC,eAAD,CAAcM,MAAOC,QAArB,SACE,cAAC,EAAD,UAINC,SAASC,eAAe,SAM1BlB,M","file":"static/js/main.c69ed5c5.chunk.js","sourcesContent":["import { Layout, Model, TabNode, IJsonModel } from 'flexlayout-react';\nimport './CustomLayout.css';\nimport { Button } from '@epo/epods-react-components';\nimport 'flexlayout-react/style/light.css';\n\nvar json: IJsonModel = {\n  global: {},\n  layout: {\n    \"type\": \"row\",\n    \"weight\": 100,\n    \"children\": [\n      {\n        \"type\": \"tabset\",\n        \"weight\": 50,\n        \"selected\": 0,\n        \"children\": [\n          {\n            \"type\": \"tab\",\n            \"name\": \"One\",\n            \"component\": \"button\"\n          }\n        ]\n      },\n      {\n        \"type\": \"tabset\",\n        \"weight\": 50,\n\n        \"selected\": 0,\n        \"children\": [\n          {\n            \"type\": \"tab\",\n            \"name\": \"Two\",\n\n            \"component\": \"button\"\n          }\n        ]\n      }\n    ]\n  }\n};\n\nconst model = Model.fromJson(json);\n\nfunction CustomLayout() {\n\n  const factory = (node: TabNode) => {\n    var component = node.getComponent();\n    if (component === \"button\") {\n      return <Button>{node.getName()}</Button>;\n    }\n  }\n\n  return (\n    <div className=\"customlayout\">\n      <Layout\n        model={model}\n        factory={factory}\n\n      />\n    </div>\n  );\n}\n\nexport default CustomLayout;\n","\r\nimport { Header } from '@epo/epods-react-components'\r\n\r\nconst toolbarStyles = {\r\n    width: \"100%\"\r\n};\r\n\r\nconst Toolbar = () => {\r\n    return (\r\n        <div style={toolbarStyles}><Header appName=\"Workbench\" logo=\"./EPO-logo.034e00d7.gif\" backgroundColor=\"white\" leftSide={<div style={{ display: 'flex', marginLeft: '6rem' }}>left</div>} rightSide={<div style={{ display: 'flex', marginRight: '6rem' }}>right</div>} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toolbar;\r\n","import CustomLayout from \"./customlayout/CustomLayout\";\r\nimport Toolbar from \"./toolbar/Toolbar\";\r\nimport { Button as EpoButton } from '@epo/epods-react-components'\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div id=\"container\">\r\n            <Toolbar></Toolbar>\r\n            <CustomLayout />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Client as Styletron } from 'styletron-engine-atomic';\nimport { Provider as StyletronProvider } from 'styletron-react';\nimport { Theme, BaseProvider } from \"@epo/epods-react-components/lib/Themes\";\n\nimport './gray.css';\nimport '@epo/css-framework-precla/lib/index.min.css'\n\nconst engine = new Styletron();\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <StyletronProvider value={engine}>\n      <BaseProvider theme={Theme}>\n        <App />\n      </BaseProvider>\n    </StyletronProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}